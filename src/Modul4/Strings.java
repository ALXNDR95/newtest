package Modul4;

/* Строки являются объектами.
* Текст, заключенный в кавычки, становится объектом типа String!
* Раз строки являются объектами, то оператор == будет сравнивать ссылки.
* С целью экономии памяти и нужен String Pool — туда помещаются строки, написанные в кавычках, а в дальнейшем вновь созданные строки с таким же значением просто ссылаются на эту область памяти. Это условие выполняется, только если строки были созданы присваиванием литерала. Если же строка была создана через оператор new, как в примере выше, то это правило выполняться не будет.
* строки, как и любые другие объекты, всегда нужно сравнивать с помощью метода equals.
* строки - неизменяемые -  Это значит, что каждый раз, когда вы, например, используете операцию конкатенации, т.е. «склеивания» строк (+ или +=), создаётся новая строка.*/


public class Strings {
    String s1 = new String("Строка тоже объект"); // строится копия строки
    String s2 = "Строка тоже объект";  //присваивается ссылка на существующую строку
    String s3 = "Строка тоже объект";  // s2 и s3 ссылаются на один и тот же объект
    String s4 = s1; // присваивается ссылка на существующую строку
    String s5 = new String(s1);  //строится копия строки
}

/*class StringsTest {
    public static void main(String[] args) {
        String s1 = "Привет";
        String s2 = new String("Привет");
        System.out.println(s1 == s2);                  // результат - false
    }*/
/*class StringsTest2 {
        public static void main(String[] args) {
            String s3 = "Java!";
            String s4 = "Java!";
            System.out.println(s3 == s4);             // результат - true
        }
    }*/
class StringsTest3 {
    public static void main(String[] args) {

        String s5 = "Java!";
        String s6 = new String("Java!");
        System.out.println(s5.equals(s6));
    }
}
